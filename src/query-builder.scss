// Variables
$rqb-spacing: 0.5rem !default;
$rqb-background-color: rgba(0, 75, 183, 0.2) !default;
$rqb-border-color: #7f81a2 !default;
$rqb-border-style: solid !default;
$rqb-border-radius: 4px !default;
$rqb-border-width: 1px !default;

// Default styles
.ruleGroup {
  display: flex;
  flex-direction: column;
  row-gap: $rqb-spacing;
  padding: $rqb-spacing;
  border-color: $rqb-border-color;
  border-style: $rqb-border-style;
  border-radius: $rqb-border-radius;
  border-width: $rqb-border-width;
  background: $rqb-background-color;

  .ruleGroup-body {
    display: flex;
    flex-direction: column;
    row-gap: $rqb-spacing;

    .ruleGroup-combinators.betweenRules {
      // Otherwise the selects are strecthed to 100% width
      align-self: flex-start;
    }
  }

  .ruleGroup-header,
  .rule {
    display: flex;
    justify-content: flex-start;
    column-gap: $rqb-spacing;
  }
}

// Drag-and-drop styles
.dndOver {
  &.rule,
  .ruleGroup-header {
    &::after {
      display: block;
      content: '\0000a0';
      border: 2px solid rebeccapurple;
    }
  }
}

.ruleGroup,
.rule {
  &.dndDragging {
    opacity: 0.5;
  }

  .queryBuilder-dragHandle {
    cursor: move;
  }
}

// When dnd is disabled, shift the (empty) drag handle to the left edge
[data-dnd='disabled'] .queryBuilder-dragHandle {
  margin-left: -$rqb-spacing;
}

// The root group should always be $rqb-spacing away from the left edge, even if dnd is enabled
[data-dnd='enabled'] [data-level='0'] > .ruleGroup-header > .queryBuilder-dragHandle {
  margin-left: -$rqb-spacing;
}
